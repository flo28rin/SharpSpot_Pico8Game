pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- sharpspot game
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

-- changes:
-- added flags so you cannot build towers on path
-- towers now have 8 levels
-- added more environment decorations

function _init()
	printh("program init")
	cf = 1
	
	change_state(
		init_menu,
		update_menu,
		draw_menu)

	-- init_menu()

	-- change_state(
	--	init_endgame,
	--	update_endgame,
	--	draw_endgame)
end

function _update()
	cf += 1
	
	cupdate()
end

function _draw()
	cdraw()
end

function change_state(
		ninit, nupdate, ndraw)
	cinit = ninit
	cupdate = nupdate
	cdraw = ndraw
	
	cinit()
end
-->8
-- main menu
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

function init_menu()
	tcol = 2
	
	menu_items = {
		"level 1",
		"level 2"
	}
	
	item_selected = 1
	offset = 16
	item_col = 12
	item_col_sel = 14
end

function update_menu()
	tcol = (tcol + 0.1) % 16
	
	if (btnp(⬇️)) then
		item_selected += 1
		while (item_selected 
				> #menu_items) do
			item_selected -= #menu_items
		end
	elseif (btnp(⬆️)) then
		item_selected -= 1
		while (item_selected < 1) do
			item_selected += #menu_items
	 end
	end
	
	if(btnp(❎)) do
		if(item_selected == 1) then
			level_selection = 1
			change_state(
				init_game,
				update_game,
				draw_game)
		elseif (item_selected == 2) then
			level_selection = 2
			change_state(
				init_game,
				update_game,
				draw_game)
		else
			-- throw error message
		end
	end
end

function draw_menu()
	cls(1)
	centre_text
		("sharp spot", 1, tcol)
		
	for i = 1, #menu_items do
		local cl = item_col
		if (item_selected == i) do
			cl = item_col_sel
		end
		centre_text
			(menu_items[i],
			12 * i + offset,
			cl)
	end
	
	spr(1, 34, 
		12 * item_selected 
		+ offset * 2)
	
	centre_text("⬆️ ⬇️ select",
		offset * 5, item_col)
	centre_text("❎ confirm",
		offset * 5 + 12, item_col)
end

function centre_text
		(str, sy, col)
	local sx = 64
		-	flr(#str * 4 / 2)
	print(str, sx,
	 sy + offset, col)
end
-->8
-- player dead state

function init_endgame()

end

function update_endgame()
	tcol = (tcol + 0.1) % 16	
	if(btnp(❎)) do
		change_state(
			init_menu,
			update_menu,
			draw_menu)
	end
end

function draw_endgame()
	cls(1)
	centre_text
		("sharp spot", 1, tcol)
	centre_text
		("game over", 10, 7)
	centre_text
		("press x to continue",
		40,
		7)
	spr(1, 12, 56)
end

-->8
-- game state
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

function init_game()
	init_enemies()
	init_turrets()
	init_bullets()
	init_player()
	global_enemy_speed = 0.3
	current_level = 1
	spawn_rate = 30
	if (level_selection == 2) then
		spawn_rate = 10
		global_enemy_speed = 0.8
	end
end

function update_game()
	if (cf % spawn_rate == 0) then
		add_enemy(48, 20,
			global_enemy_speed, 10)
	end
	
	update_enemies()
	update_turrets()
	update_bullets()
	update_player()
end

function draw_game()
	cls(1)
	map(0, 0, 0, 0, 16, 12)
	draw_enemies()
	draw_bullets()
	draw_turrets()
	draw_player()
	centre_text(
		"♥"..player.health..
		" $"..player.money..
		" w:"..player.kills,
		88, 7)
	local trt = turretatplayer()
	if (trt == nil) then
		centre_text(
			"cost: $200",
			98, 7)
	else
		if (trt.level < 7) then
			centre_text(
				"level "..trt.level..
				" upgrade for $"..(trt.level + 1) * 100,
				98, 7)
		else
			centre_text(
				"level "..trt.level..
				" max",
				98, 7)
		end
	end
end
-->8
-- enemies
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

mp = 8
level_paths = {
	{ -4 * mp, 10 * mp,
		5 * mp, 10 * mp,
		5 * mp, 7 * mp,
		9 * mp, 7 * mp,
		9 * mp, 10 * mp,
		13 * mp, 10 * mp,
		13 * mp, -4 * mp}
}

enemy_types = {
	{ "wawa", 48, 50, 1, 10 }
}

enemies = {}

function init_enemies()
	enemies = {}
end

function update_enemies()
	for e in all(enemies) do
		update_enemy(e)
	end
end

function draw_enemies()
	for e in all(enemies) do
		draw_enemy(e)
	end
end

function add_enemy(
		espr, ehealth, espeed, edamage)
	local e = {}
	e.spr = espr
	e.sprdelta = 0
	e.sprframes = 2
	e.px = level_paths[current_level][1]
	e.py = level_paths[current_level][2]
	e.tx = level_paths[current_level][3]
	e.ty = level_paths[current_level][4]
	e.target_index = 3
	e.dead = false
	
	e.health = ehealth
	e.speed = espeed
	e.damage = edamage
	
	add(enemies, e)
end

function update_enemy(e)
	if (e.health <= 0) then
		player_kill()
		e.dead = true
		del(enemies, e)
		return
	end

	if (e.px < e.tx) then
		e.px += e.speed
	elseif (e.px > e.tx) then
		e.px -= e.speed
	end
	
	if (e.py < e.ty) then
		e.py += e.speed
	elseif (e.py > e.ty) then
		e.py -= e.speed
	end
	
	if (abs(e.px - e.tx) 
			< e.speed	and
			abs(e.py - e.ty) 
			< e.speed) then
		e.px = e.tx
		e.py = e.ty
		
		e.target_index += 2
		
		if (e.target_index 
				>	#level_paths[1]) then
			inflict_damage(e.damage)
			e.dead = true
			del(enemies, e)
		else
			e.tx = level_paths[current_level][e.target_index]
			e.ty = level_paths[current_level][e.target_index + 1]
		end
	end
	
	if (cf % 30 == 0) then
		if (e.sprdelta == 1) then
			e.sprdelta = 0
		else
			e.sprdelta = 1
		end
	end
end

function draw_enemy(e)
	spr(e.spr + e.sprdelta, e.px, e.py)
end

-->8
-- turrets
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

turrets = {}

function init_turrets()
	turrets = {}
end

function add_turret(ts, 
		tpx, tpy, tr, rof)
	t = {}
	t.s = ts -- sprite
	t.sdelta = 0
	t.px = tpx
	t.py = tpy
	t.cs = t.s -- crt sprite
	t.fx = false -- flip
	t.fy = false
	t.enemy = nil
	t.r = tr -- range
	t.rof = rof -- rate of fire
	t.level = 0
	
	add(turrets, t)
end

function update_turrets()
	for t in all(turrets) do
		update_turret(t)
	end
end

function draw_turrets()
	for t in all(turrets) do
		draw_turret(t)
	end
end

function update_turret(t)
	if (cf % 30 == 0) then
		if (t.sdelta == 0) then
			t.sdelta = 3
		else
			t.sdelta = 0
		end
	end

	if (t.enemy != nil) then
		if (t.enemy.dead) then
			t.enemy = nil
		else
			rotate_turret()
			maybe_fire(t)
		end
		
		if (t.enemy != nil
				and (not t.enemy.dead)) then
			local dist = distance(
				t.px, t.enemy.px,
				t.py, t.enemy.py)
			if (dist > t.r) then
				t.enemy = nil
			end
		end
		
	else
		-- finding new enemy
		-- should be the enemy closest to exit
		index = 0
		for e in all(enemies) do
			local dist = distance(
				t.px, e.px,
				t.py, e.py)
			-- gets the first enemy in the array that is in range
			-- why it does not get index 0 ??
			if (dist < t.r) then
				printh(index)
				t.enemy = e
				-- exit for loop
				-- THIS FIXES THE PROBLEM
				break
			end
			index = index + 1
		end
	end
end

function rotate_turret()
	if (t.enemy == nil) then
		return
	end
	
	local r = atan2(
		t.px - t.enemy.px,
		t.py - t.enemy.py)

	if (r < 0.0625 or r >= 0.9375) then
		t.cs = t.s
		t.fx = false
		t.fy = false
	elseif (r < 0.1875) then
		t.cs = t.s + 2
		t.fx = false
		t.fy = false
	elseif (r < 0.3125) then
		t.cs = t.s + 1
		t.fx = false
		t.fy = false
	elseif (r < 0.4375) then
		t.cs = t.s + 2
		t.fx = true
		t.fy = false
	elseif (r < 0.5625) then
		t.cs = t.s
		t.fx = true
		t.fy = false
	elseif (r < 0.6875) then
		t.cs = t.s + 2
		t.fx = true
		t.fy = true
	elseif (r < 0.8125) then
		t.cs = t.s + 1
		t.fx = false
		t.fy = true
	elseif (r < 0.9375) then
		t.cs = t.s + 2
		t.fx = false
		t.fy = true
	end
end

function draw_turret(t)
 spr(t.cs + t.sdelta + 6 * t.level,
 	t.px, t.py,
 	1, 1, t.fx, t.fy)
	if (t.enemy != nil) then
		local d = distance(
			t.px, t.enemy.px,
			t.py, t.enemy.py)
		--line(
		--	t.px, t.py,
		--	t.enemy.px, t.enemy.py, 0)
	end
end

function distance (x1, x2,
		y1, y2)
	local dx = abs(x1 - x2)
	local dy = abs(y1 - y2)
	return sqrt (dx * dx + dy * dy)
end

function maybe_fire(t)
	if (cf % t.rof == 0) then
		add_bullet(t.px + 4, t.py + 4,
			1, t.level * 1.2 + 1, t.enemy, t.level * 10 + 10)
	end
end

function upgrade_turret(t)
	t.level += 1
	t.r *= 2
	t.rof /= 2
end
-->8
-- bullets
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

bullets = {}

function init_bullets()
	bullets = {}
end

function update_bullets()
	for b in all(bullets) do
		update_bullet(b)
	end
end

function draw_bullets()
	for b in all(bullets) do
		draw_bullet(b)
	end
end

function add_bullet(
		px, py, size, speed,
		target, dmg)
	local b = {}
	b.px, b.py = px, py
	b.size = size
	b.speed = speed
	b.target = target
	b.damage = dmg
	
	add(bullets, b)
end

function update_bullet(b)
	if (b.target.dead
			or b.target.health <= 0) then
		del(bullets, b)
		return
	end
	
	local r = atan2(
		b.target.px + 4 - b.px,
		b.target.py + 4 - b.py)
	b.px = b.px + b.speed * cos(r)
	b.py = b.py + b.speed * sin(r)
	
	local ds = distance(
		b.target.px + 4, b.px,
		b.target.py + 4, b.py)	
	if (ds < b.speed) then
		b.target.health -= b.damage
		del(bullets, b)
	end
end

function draw_bullet(b)
	circfill(b.px, b.py, b.size)
end
-->8
-- player

function init_player()
	local pl = {}
	pl.spr = 32
	pl.sprdelta = 0
	pl.health = 100
	pl.money = 1000
	pl.kills = 0
	pl.px = 8 * 6
	pl.py = 8 * 6
	
	player = pl
end

function update_player()
	if (player.health <= 0) then
		change_state(
			init_endgame,
			update_endgame,
			draw_endgame)
	end

	if (cf % 20 == 0) then
		if (player.sprdelta == 0) then
			player.sprdelta = 1
		else
			player.sprdelta = 0
		end
	end
	
	if (btn(⬆️)) then
		if (not press_up) then
			press_up = true
			player.py -= 8
			player.py = mid(0, player.py, 11 * 8)
		end
	else
			press_up = false
	end
	
	if (btn(⬇️)) then
		if (not press_down) then
			press_down = true
			player.py += 8
			player.py = mid(0, player.py, 11 * 8)
		end
	else
			press_down = false
	end
	
	if (btn(⬅️)) then
		if (not press_left) then
			press_left = true
			player.px -= 8
			player.px = mid(0, player.px, 15 * 8)
		end
	else
			press_left = false
	end
	
	if (btn(➡️)) then
		if (not press_right) then
			press_right = true
			player.px += 8
			player.px = mid(0, player.px, 15 * 8)
		end
	else
			press_right = false
	end
	
	if (btn(❎)) then
		if (not press_turret) then
			press_turret = true
			local t = turretatplayer()
			if (t == nil) then
				local flagok = flagokatplayer()
				if (flagok) then
					if (player.money >= 200) then
						add_turret(64, player.px,
							player.py, 20, 30)
						player.money -= 200
					end
				end
			else
				if (t.level < 7
						and player.money >= 100 * (t.level + 1)) then
					player.money -= 100 * (t.level + 1)
					upgrade_turret(t)
				end
			end
		end
	else
		press_turret = false
	end
	
end

function draw_player()
	spr(player.spr 
		+ player.sprdelta,
		player.px, player.py)
end

function turretatplayer()
	for t in all(turrets) do
		if (t.px == player.px
				and t.py == player.py) then
			return t
		end
	end
	return nil
end

function flagokatplayer()
	return not fget(mget(player.px / 8, player.py / 8), 0)
end

function player_kill()
	player.money += 100
	player.kills += 1
	if (player.kills % 10 == 0) then
		spawn_rate -= 2
		global_enemy_speed += 0.1
		if (spawn_rate < 3) then
			spawn_rate = 0
		end
	end
end

function inflict_damage(damage)
	player.health -= damage	
	if (player.health <= 0) then
	
	end
end
__gfx__
0000000000eee0009999999999999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
00000000000888009999999999999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000e09988899999bbb99999aaa99999fff99999ccc999000000000000000000000000000000000000000000000000000000000000000000000000
00077000eeee08ee99282999992b2999992a2999992f2999992c2999000000000000000000000000000000000000000000000000000000000000000000000000
0007700088ee08889992999999929999999299999992999999929999000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000809922299999222999992229999922299999222999000000000000000000000000000000000000000000000000000000000000000000000000
00000000000888009992999999929999999299999992999999929999000000000000000000000000000000000000000000000000000000000000000000000000
00000000008880009999999999999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229999222299992222999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229992222299992222299999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922222299992222229999222222229999000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922222299992222229992222222222999000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922222999999222229922222222222299000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922229999999922229922222222222299000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229999999999999999999922222992222299000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229999999999999999999922229999222299000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111100001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00199100001991000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01199110011991100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011100001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010100001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0cc000c000c00c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000c000c0000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0cc0000008c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c8008c00cc00cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000cc000000c800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c0000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0000c00c0000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00c8cc0000cc8c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000990000000000000000000000110000000000000001919100000000000000000
00000000000000000000000000000000000000000000000000009000000000000090000000001000000000000010000000000000009000900000091000000000
00000000000191000009190000000000000919000001910000009000000919000001910000001000000191000009190000919191001919100009109100191919
00919100000989000091810000191900000181000019890000191900099181990019890000919100011989110091810000100909009080900091090900900101
00008900000101000010190000008100000909000090910000088100000989000098910000088900000181000018190000888101001080100010801000888909
00919100000909000001900000191900000101000009100000191900000101000009109900919100000909000001901100100909009181900908019000900101
00000000000000000000000000000000000000000000000000009000000000000000000900001000000000000000000100919191000000000080190000191919
00000000000000000000000000000000000000000000000000009000000000000000000000001000000000000000000000000000000000000009000000000000
00919190000000000000000000010100010001000000000000090900090009000000000000091900000090900000000000019100000010100090000000190000
00100010000001900090900000191910009019100010100000919190001091900000001001919191001919190000009009191919009191910010100000019191
00919190000190190010101000019100100191910090909000091900900919190191919000100010009801900919191000900090001809100091900100090010
00108010001901010091919109198919091989100019191901918191019181900908801900988890001880190108809100188810009880910888191901910191
00908090009080900888891000018100009881000888819000098900001889000000809100180810090088900000801900980890010088100888009000188900
00198910010809100091919109198919008919100019191901918191008191900908801900900090000019100108809100100010000091900019101091988191
00000000008091000010101000008000000090090090909000008000000010010191919000190910000900000919191000910190000100000090919000088000
00000000000100000090900000000000000009000010100000000000000001000000001000000000000000000000009000000000000000000010101000000000
00000000001000000091000000000000000000099191900000100091000000011919100000900019000000000000000000000000000000000000000000000000
09000009009090000009191901000001009091010009190001091019001019090001910009019091000000000000000000001900000000000000000000009100
00191910001910090001009000919190191910090100919000918001919190010900191000198009191919000090010000098010919191000010090000018090
90988009088891910919091910188001008880910918881909188819008880190198889101988891088880000018890000188890088880000098810000988810
01888101088800100098810009888909019089190098089000808190091081910018081000808910088880000098810009888100088880000018890001888900
00089090009190901918891900081010008881900918981900181900008889100198189100989100919191000018890000089000191919000098810000081000
00010100001019100008800000090900191919000090109009000000919191000010901001000000000000000098810000010000000000000018890000090000
00009000009090900000000000001000009090000010001000000000001010000090009000000000000000000010090000000000000000000090010000000000
__gff__
0000000000000000000000000000000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010051010101010101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1006041010101004101010051012100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100210100310101002041012100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0510101010101010031010101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010051002100603101004100612100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0310041010101004101010100312061000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101002101010061010101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005101006151111111610021012030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1003051010121010061210101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100310121004101210061012100600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111131010061411111113101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0610041010100502101010051003100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
