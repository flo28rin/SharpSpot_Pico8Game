pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
-- sharpspot game
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

-- changes:
-- added flags so you cannot build towers on path
-- towers now have 8 levels
-- added more environment decorations

function _init()
	cf = 1
	
	change_state(
		init_menu,
		update_menu,
		draw_menu)

	-- init_menu()

	-- change_state(
	--	init_endgame,
	--	update_endgame,
	--	draw_endgame)
end

function _update()
	cf += 1
	
	cupdate()
end

function _draw()
	cdraw()
end

function change_state(
		ninit, nupdate, ndraw)
	cinit = ninit
	cupdate = nupdate
	cdraw = ndraw
	
	cinit()
end
-->8
-- main menu
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

function init_menu()
	tcol = 2
	
	menu_items = {
		"level a",
		"level b"
	}
	
	item_selected = 1
	offset = 16
	item_col = 12
	item_col_sel = 14
end

function update_menu()
	tcol = (tcol + 0.1) % 16
	
	if (btnp(⬇️)) then
		sfx(06)
		item_selected += 1
		while (item_selected 
				> #menu_items) do
			item_selected -= #menu_items
		end
	elseif (btnp(⬆️)) then
		sfx(06)
		item_selected -= 1
		while (item_selected < 1) do
			item_selected += #menu_items
	 end
	end
	
	if(btnp(❎)) do
		sfx(06)
		if(item_selected == 1) then
			level_selection = 1
			change_state(
				init_game,
				update_game,
				draw_game)
			music(0)
		elseif (item_selected == 2) then
			level_selection = 2
			change_state(
				init_game,
				update_game,
				draw_game)
			music(49)
		else
			-- throw error message
		end
	end
end

function draw_menu()
	cls(1)
	centre_text
		("sharp spot", 1, tcol)
		
	for i = 1, #menu_items do
		local cl = item_col
		if (item_selected == i) do
			cl = item_col_sel
		end
		centre_text
			(menu_items[i],
			12 * i + offset,
			cl)
	end
	
	spr(1, 34, 
		12 * item_selected 
		+ offset * 2)
	
	centre_text("⬆️ ⬇️ select",
		offset * 5, item_col)
	centre_text("❎ confirm",
		offset * 5 + 12, item_col)
end

function centre_text
		(str, sy, col)
	local sx = 64
		-	flr(#str * 4 / 2)
	print(str, sx,
	 sy + offset, col)
end
-->8
-- player dead state

function init_endgame()

end

function update_endgame()
	tcol = (tcol + 0.1) % 16	
	if(btnp(❎)) do
		sfx(06)
		change_state(
			init_menu,
			update_menu,
			draw_menu)
	end
end

function draw_endgame()
	cls(1)
	centre_text
		("sharp spot", 1, tcol)
	centre_text
		("game over", 10, 7)
	centre_text
		("press x to continue",
		40,
		7)
	spr(1, 12, 56)
end

-->8
-- game state
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

function init_game()
	init_enemies()
	init_turrets()
	init_bullets()
	init_player()
	global_enemy_speed = 0.3
	current_level = 1
	spawn_rate = 30
	if (level_selection == 2) then
		spawn_rate = 10
		global_enemy_speed = 0.8
		player.kills = player_kills_change
	end
end

function update_game()
	if (cf % spawn_rate == 0) then
		-- printh("getting new enemy "..cf.."  "..spawn_rate)
		add_enemy(48, 20,
			global_enemy_speed, 10)
	else
		-- printh("getting new enemy "..cf.."  "..spawn_rate)
	end
	
	update_enemies()
	update_turrets()
	update_bullets()
	update_player()
end

function draw_game()
	cls(1)
	map(0, 0, 0, 0, 16, 12)
	draw_enemies()
	draw_bullets()
	draw_turrets()
	draw_player()
	centre_text(
		"♥"..player.health..
		" $"..player.money..
		" w:"..player.kills,
		88, 7)
	local trt = turretatplayer()
	if (trt == nil) then
		centre_text(
			"cost: $200",
			98, 7)
	else
		if (trt.level < 7) then
			centre_text(
				"level "..trt.level..
				" upgrade for $"..(trt.level + 1) * 100,
				98, 7)
		else
			centre_text(
				"level "..trt.level..
				" max",
				98, 7)
		end
	end
end
-->8
-- enemies
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

mp = 8
level_paths = {
	{ -4 * mp, 10 * mp,
		5 * mp, 10 * mp,
		5 * mp, 7 * mp,
		9 * mp, 7 * mp,
		9 * mp, 10 * mp,
		13 * mp, 10 * mp,
		13 * mp, -4 * mp}
}

enemy_types = {
	{ "wawa", 48, 50, 1, 10 }
}

enemies = {}

function init_enemies()
	enemies = {}
end

function update_enemies()
	for e in all(enemies) do
		update_enemy(e)
	end
end

function draw_enemies()
	for e in all(enemies) do
		draw_enemy(e)
	end
end

function add_enemy(
		espr, ehealth, espeed, edamage)
	printh("add enemy")
	local e = {}
	e.spr = espr
	e.sprdelta = 0
	e.sprframes = 2
	e.px = level_paths[current_level][1]
	e.py = level_paths[current_level][2]
	e.tx = level_paths[current_level][3]
	e.ty = level_paths[current_level][4]
	e.target_index = 3
	e.dead = false
	
	e.health = ehealth
	e.speed = espeed
	e.damage = edamage
	
	add(enemies, e)
	printh("add enemy "..#enemies)
end

function update_enemy(e)
	if (e.health <= 0) then
		player_kill()
		e.dead = true
		del(enemies, e)
		return
	end

	if (e.px < e.tx) then
		e.px += e.speed
	elseif (e.px > e.tx) then
		e.px -= e.speed
	end
	
	if (e.py < e.ty) then
		e.py += e.speed
	elseif (e.py > e.ty) then
		e.py -= e.speed
	end
	
	if (abs(e.px - e.tx) 
			< e.speed	and
			abs(e.py - e.ty) 
			< e.speed) then
		e.px = e.tx
		e.py = e.ty
		
		e.target_index += 2
		
		if (e.target_index 
				>	#level_paths[1]) then
			inflict_damage(e.damage)
			e.dead = true
			del(enemies, e)
		else
			e.tx = level_paths[current_level][e.target_index]
			e.ty = level_paths[current_level][e.target_index + 1]
			if (player.kills >= player_kills_change and rnd(10) >= 3) then
				e.tx = rnd(13) * mp
				e.ty = rnd(10) * mp
			end
		end
	end
	
	if (cf % 30 == 0) then
		if (e.sprdelta == 1) then
			e.sprdelta = 0
		else
			e.sprdelta = 1
		end
	end
end

player_kills_change = 100

function draw_enemy(e)
	spr(e.spr + e.sprdelta, e.px, e.py)
end

-->8
-- turrets
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

turrets = {}

function init_turrets()
	turrets = {}
end

function add_turret(ts, 
		tpx, tpy, tr, rof)
	-- printh("add new turret")
	t = {}
	t.s = ts -- sprite
	t.sdelta = 0
	t.px = tpx
	t.py = tpy
	t.cs = t.s -- crt sprite
	t.fx = false -- flip
	t.fy = false
	t.enemy = nil
	t.r = tr -- range
	t.rof = rof -- rate of fire
	t.level = 0
	
	add(turrets, t)
	-- printh("add new turret end"..#turrets)
end

function update_turrets()
	for t in all(turrets) do
		update_turret(t)
	end
end

function draw_turrets()
	for t in all(turrets) do
		draw_turret(t)
	end
end

function update_turret(t)
	if (cf % 30 == 0) then
		if (t.sdelta == 0) then
			t.sdelta = 3
		else
			t.sdelta = 0
		end
	end

	if (t.enemy != nil) then
		if (t.enemy.dead) then
			t.enemy = nil
		else
			rotate_turret()
			maybe_fire(t)
		end
		
		if (t.enemy != nil
				and (not t.enemy.dead)) then
			local dist = distance(
				t.px, t.enemy.px,
				t.py, t.enemy.py)
			if (dist > t.r) then
				t.enemy = nil
			end
		end
		
	else
		-- finding new enemy
		-- should be the enemy closest to exit
		index = 0
		for e in all(enemies) do
			local dist = distance(
				t.px, e.px,
				t.py, e.py)
			-- gets the first enemy in the array that is in range
			-- why it does not get index 0 ??
			if (dist < t.r) then
				t.enemy = e
				-- exit for loop
				-- THIS FIXES THE PROBLEM
				break
			end
			index = index + 1
		end
	end
end

function rotate_turret()
	if (t.enemy == nil) then
		return
	end
	
	local r = atan2(
		t.px - t.enemy.px,
		t.py - t.enemy.py)

	if (r < 0.0625 or r >= 0.9375) then
		t.cs = t.s
		t.fx = false
		t.fy = false
	elseif (r < 0.1875) then
		t.cs = t.s + 2
		t.fx = false
		t.fy = false
	elseif (r < 0.3125) then
		t.cs = t.s + 1
		t.fx = false
		t.fy = false
	elseif (r < 0.4375) then
		t.cs = t.s + 2
		t.fx = true
		t.fy = false
	elseif (r < 0.5625) then
		t.cs = t.s
		t.fx = true
		t.fy = false
	elseif (r < 0.6875) then
		t.cs = t.s + 2
		t.fx = true
		t.fy = true
	elseif (r < 0.8125) then
		t.cs = t.s + 1
		t.fx = false
		t.fy = true
	elseif (r < 0.9375) then
		t.cs = t.s + 2
		t.fx = false
		t.fy = true
	end
end

function draw_turret(t)
 spr(t.cs + t.sdelta + 6 * t.level,
 	t.px, t.py,
 	1, 1, t.fx, t.fy)
	if (t.enemy != nil) then
		local d = distance(
			t.px, t.enemy.px,
			t.py, t.enemy.py)
		--line(
		--	t.px, t.py,
		--	t.enemy.px, t.enemy.py, 0)
	end
end

function distance (x1, x2,
		y1, y2)
	local dx = abs(x1 - x2)
	local dy = abs(y1 - y2)
	return sqrt (dx * dx + dy * dy)
end

function maybe_fire(t)
	if (cf % t.rof == 0) then
		add_bullet(t.px + 4, t.py + 4,
			1, t.level * 1.2 + 1, t.enemy, t.level * 10 + 10)
	end
end

function upgrade_turret(t)
	t.level += 1
	t.r *= 2
	t.rof /= 2
end
-->8
-- bullets
-- inspired by:
-- https://www.youtube.com/watch?v=wqytgpblvea
-- https://www.youtube.com/watch?v=8mfqhg4xcdc
-- https://www.youtube.com/watch?v=hq_avxmmsb8
-- https://www.youtube.com/watch?v=f3zbamojx_u

bullets = {}

function init_bullets()
	bullets = {}
end

function update_bullets()
	for b in all(bullets) do
		update_bullet(b)
	end
end

function draw_bullets()
	for b in all(bullets) do
		draw_bullet(b)
	end
end

function add_bullet(
		px, py, size, speed,
		target, dmg)
	local b = {}
	b.px, b.py = px, py
	b.size = size
	b.speed = speed
	b.target = target
	b.damage = dmg
	
	add(bullets, b)
end

function update_bullet(b)
	if (b.target.dead
			or b.target.health <= 0) then
		del(bullets, b)
		return
	end
	
	local r = atan2(
		b.target.px + 4 - b.px,
		b.target.py + 4 - b.py)
	b.px = b.px + b.speed * cos(r)
	b.py = b.py + b.speed * sin(r)
	
	local ds = distance(
		b.target.px + 4, b.px,
		b.target.py + 4, b.py)	
	if (ds < b.speed) then
		sfx(03)
		b.target.health -= b.damage
		del(bullets, b)
	end
end

function draw_bullet(b)
	circfill(b.px, b.py, b.size)
end
-->8
-- player

function init_player()
	local pl = {}
	pl.spr = 32
	pl.sprdelta = 0
	pl.health = 100
	pl.money = 1000
	pl.kills = 0
	pl.px = 8 * 6
	pl.py = 8 * 6
	
	player = pl
end

function update_player()
	if (player.health <= 0) then
		change_state(
			init_endgame,
			update_endgame,
			draw_endgame)
			sfx(04)
			music(-1)
	end

	if (cf % 20 == 0) then
		if (player.sprdelta == 0) then
			player.sprdelta = 1
		else
			player.sprdelta = 0
		end
	end
	
	if (btn(⬆️)) then
		if (not press_up) then
			press_up = true
			player.py -= 8
			if (player.py < 0) then
				sfx(05)
			end
			player.py = mid(0, player.py, 11 * 8)
		end
	else
			press_up = false
	end
	
	if (btn(⬇️)) then
		if (not press_down) then
			press_down = true
			player.py += 8
			if (player.py >= 11 * 8) then
				sfx(05)
			end
			player.py = mid(0, player.py, 11 * 8)
		end
	else
			press_down = false
	end
	
	if (btn(⬅️)) then
		if (not press_left) then
			press_left = true
			player.px -= 8
			if (player.px < 0) then
				sfx(05)
			end
			player.px = mid(0, player.px, 15 * 8)
		end
	else
			press_left = false
	end
	
	if (btn(➡️)) then
		if (not press_right) then
			press_right = true
			player.px += 8
			if (player.px > 15 * 8) then
				sfx(05)
			end
			player.px = mid(0, player.px, 15 * 8)
		end
	else
			press_right = false
	end
	
	if (btn(❎)) then
		if (not press_turret) then
			press_turret = true
			local t = turretatplayer()
			if (t == nil) then
				local flagok = flagokatplayer()
				if (flagok) then
					if (player.money >= 200) then
						add_turret(64, player.px,
							player.py, 20, 30)
						player.money -= 200
						sfx(00)
					end
				end
			else
				if (t.level < 7
						and player.money >= 100 * (t.level + 1)) then
					player.money -= 100 * (t.level + 1)
					upgrade_turret(t)
					sfx(00)
				end
			end
		end
	else
		press_turret = false
	end
	
end

function draw_player()
	spr(player.spr 
		+ player.sprdelta,
		player.px, player.py)
end

function turretatplayer()
	for t in all(turrets) do
		if (t.px == player.px
				and t.py == player.py) then
			return t
		end
	end
	return nil
end

function flagokatplayer()
	return not fget(mget(player.px / 8, player.py / 8), 0)
end

music_change = false

function player_kill()
	sfx(01)
	player.money += 50
	player.kills += 1
	if (player.kills % 10 == 0) then
		spawn_rate -= 1
		global_enemy_speed += 0.1
		if (spawn_rate < 5) then
			spawn_rate = 5
		end
		if (player.kills >= player_kills_change and not music_change) then
			music(-1)
			music(49)
			music_change = true
		end
	end
end

function inflict_damage(damage)
	sfx(02)
	player.health -= damage	
	if (player.health <= 0) then
	
	end
end
__gfx__
0000000000eee0009999999999999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
00000000000888009999999999999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000e09988899999bbb99999aaa99999fff99999ccc999000000000000000000000000000000000000000000000000000000000000000000000000
00077000eeee08ee99282999992b2999992a2999992f2999992c2999000000000000000000000000000000000000000000000000000000000000000000000000
0007700088ee08889992999999929999999299999992999999929999000000000000000000000000000000000000000000000000000000000000000000000000
00700700000000809922299999222999992229999922299999222999000000000000000000000000000000000000000000000000000000000000000000000000
00000000000888009992999999929999999299999992999999929999000000000000000000000000000000000000000000000000000000000000000000000000
00000000008880009999999999999999999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229999222299992222999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229992222299992222299999999999999999000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922222299992222229999222222229999000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922222299992222229992222222222999000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922222999999222229922222222222299000000000000000000000000000000000000000000000000000000000000000000000000
99999999222222229922229922229999999922229922222222222299000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229999999999999999999922222992222299000000000000000000000000000000000000000000000000000000000000000000000000
99999999999999999922229999999999999999999922229999222299000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00111100001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00199100001991000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01199110011991100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011100001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010100001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0cc000c000c00c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000c000c0000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0cc0000008c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c8008c00cc00cc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000cc000000c800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000c0000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0000c00c0000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00c8cc0000cc8c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000990000000000000000000000110000000000000001919100000000000000000
00000000000000000000000000000000000000000000000000009000000000000090000000001000000000000010000000000000009000900000091000000000
00000000000191000009190000000000000919000001910000009000000919000001910000001000000191000009190000919191001919100009109100191919
00919100000989000091810000191900000181000019890000191900099181990019890000919100011989110091810000100909009080900091090900900101
00008900000101000010190000008100000909000090910000088100000989000098910000088900000181000018190000888101001080100010801000888909
00919100000909000001900000191900000101000009100000191900000101000009109900919100000909000001901100100909009181900908019000900101
00000000000000000000000000000000000000000000000000009000000000000000000900001000000000000000000100919191000000000080190000191919
00000000000000000000000000000000000000000000000000009000000000000000000000001000000000000000000000000000000000000009000000000000
00919190000000000000000000010100010001000000000000090900090009000000000000091900000090900000000000019100000010100090000000190000
00100010000001900090900000191910009019100010100000919190001091900000001001919191001919190000009009191919009191910010100000019191
00919190000190190010101000019100100191910090909000091900900919190191919000100010009801900919191000900090001809100091900100090010
00108010001901010091919109198919091989100019191901918191019181900908801900988890001880190108809100188810009880910888191901910191
00908090009080900888891000018100009881000888819000098900001889000000809100180810090088900000801900980890010088100888009000188900
00198910010809100091919109198919008919100019191901918191008191900908801900900090000019100108809100100010000091900019101091988191
00000000008091000010101000008000000090090090909000008000000010010191919000190910000900000919191000910190000100000090919000088000
00000000000100000090900000000000000009000010100000000000000001000000001000000000000000000000009000000000000000000010101000000000
00000000001000000091000000000000000000099191900000100091000000011919100000900019000000000000000000000000000000000000000000000000
09000009009090000009191901000001009091010009190001091019001019090001910009019091000000000000000000001900000000000000000000009100
00191910001910090001009000919190191910090100919000918001919190010900191000198009191919000090010000098010919191000010090000018090
90988009088891910919091910188001008880910918881909188819008880190198889101988891088880000018890000188890088880000098810000988810
01888101088800100098810009888909019089190098089000808190091081910018081000808910088880000098810009888100088880000018890001888900
00089090009190901918891900081010008881900918981900181900008889100198189100989100919191000018890000089000191919000098810000081000
00010100001019100008800000090900191919000090109009000000919191000010901001000000000000000098810000010000000000000018890000090000
00009000009090900000000000001000009090000010001000000000001010000090009000000000000000000010090000000000000000000090010000000000
__gff__
0000000000000000000000000000000000010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1010101010051010101010101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1006041010101004101010051012100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100210100310101002041012100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0510101010101010031010101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010051002100603101004100612100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0310041010101004101010100312061000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101002101010061010101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1005101006151111111610021012030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1003051010121010061210101012101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010100310121004101210061012100600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1111111111131010061411111113101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0610041010100502101010051003100500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000e0501102011020130201502017020180301803016030180301c0402303029040210401b0301b0401d05022050210301b0201903016040170601c0601707012070090700a0500c0500a0600805007040
000100001b0501905010050180500805016050160501605016050150500d050150501405014050140500a05014050130501305006050130501305013050050501205011050100500f0500e0500e0500605006050
0001000000000000001b2501a2501a25019250182501725016250123501f35010350000001a3500b35019350000000e3500000019250083500d350182500c3500b3500535024550215501f5501e5500000000000
0001000000000000001f6501e6501d600206501b6502060020650196502060000000000002060020600166002060020630146001f6501e6001c6501a6501963017600106501e60000000000000e650000000c650
000700002f6502d6502a6502965027650266502465022650216501f6501d6501c6501b6501a6501865016650156501365012650116500f6500d6500c6500a6500865006650056500365000650006502b65000650
00010000000000000000000235500000000000000000b550000000000000000000000000000000000000000000000000000000000000265500000034550000000000000000000001655000000000000000000000
000500001a7501b7502870000000000000000000000212001f2001d20000000000001a20000000000000000017200172000000000000172001720000000000000000000000000000c20000000000000000000000
0109000418070160701307011070295052650529505265052d505295052950526505225051f5051d505215052e5052b50528505245052d5052d5052850528505265052e5052b5052850524505215051d50521505
0114000020734200351c7341c0351973419535157343952520734200351c7341c0351953219035147341503121734210351c7341c0261973419035237341703521734395251c7341c03519734195351773717035
011400000c043090552072409055246151972315555090550c053090651972309565207242461509065155650c053060652072406065246151672306065125650c05306065167230656520724246150606515555
011400000c053021651e7240206524615197450e7650c05302165020651e7341e7350256524615020650e56501165010651e7240c05324615167230b0450d0650c05301165197440b56520724246150106515555
0114000020724200251c7241c02525742287421572439525207242a7422c7412c7322c72219025147242a74228742287451c7341e7421e7421e735237241702521724395251c7341c03519734195351773617035
0014000020724200251c7241c02525742287421572439525207242a7422c7412c7322c72219025147242f7422d7422d7452d734217422174221735237241702521724395251c7341c03519734195351773617035
0116002006055061550d055061550d547061550d055061550d055060550615501155065470d15504055041550b055041550b547041550b055041550b0550b155040550b155045460b1550b055041550b0550b155
010b00201e4421e4321f4261e4261c4321c4221e4421e4321e4221e4221f4261e4261c4421c4321c4221c4221c4221c4221c4221c4221c4221c4221c4221c4221c4221c4221c4221c42510125101051012510105
011600001e4401e4321e4221e4250653500505065351a0241a025065351a0250653500505065351902419025045351702404535005050453500505045351e0241e025045351e0240453504535005050453504535
010b00201e4421e4361f4261e4261c4421c4421a4451c4451e4451f44521445234452644528445254422543219442194322544225432264362543623442234322144221432234472343625440234402144520445
01160000190241902506535135000653500505065351a0241a025065351a0250653506404065351902419025045351702404535005050453500505045351e0241e025045351e0240453504535005050453504535
010e000005455054553f52511435111250f4350c43511125034550345511125182551b255182551d2551112501455014552025511125111252025511125202550345520255224552325522455202461d4551b255
010e00000c0530c4451112518455306251425511255054450c0530a4353f52513435306251343518435054450c053111251b4353f525306251b4353f5251b4350c0331b4451d2451e445306251d2451844516245
010e00000145520255224552325522445202551d45503455034050345503455182551b455182551d455111250045520255224552325522455202461d4551b255014550145511125182551b455182551d45511125
010e00000c0531b4451d2451e445306251d245184450c05317200131253f52513435306251343518435014450c0431b4451d2451e445306251d245184451624511125111253f5251343530625134351843500455
010e0000004550045520455111251d125204551d1252912501455014552c455111251d1252c4551d12529125034552c2552e4552f2552e4552c2552945503455044552c2552e4552f2552e4552c246294551b221
010e00000c0530c0531b4551b225306251b4551b2250f4250c0530c05327455272253062527455272251b4250c0531b4451d2451e445306251d245184450c0530c0531b4451d2451e445306251d2451844500455
010d00000c0530445504255134453f6150445513245044550c0531344513245044553f6150445513245134450c0530445504255134453f6150445513245044550c0531344513245044553f615044551324513445
010d000028555234452d2352b5552a4452b2352f55532245395303725536540374353b2503954537430342553654034235325552f2402d5352b2502a4452b530284552624623530214551f24023535284302a245
010d00002b5552a4452823523555214451f2351e5551c4452b235235552a445232352d5552b4452a2352b555284452a235285552644523235215551f4451c2351a555174451e2351a5551c4451e2351f55523235
010d00000c0530045500255104453f6150045510245004550c0530044500245104553f6150045510245104450c0530045500255104453f6150045510245004550c0531044510245004553f615004551024500455
010d00000c0530245502255124453f6150245512245024550c0531244512245024553f6150245502255124450c0530245502255124453f6150245512245024550c0530244512245024553f615124550224512445
010d00002b5552a45528255235552b5452a44528545235452b5352a03528535235352b0352a03528735237352b0352a03528735237351f7251e7251c725177251f7151e7151c715177151371512715107150b715
010c00200c0530c235004303a324004453c3253c3240c0533c6150c0530044000440002353e5253e5250c1530c0530f244034451b323034453702437522370253c6153e5250334003440032351b3230c0531b323
010c00200c05312235064303a324064453c3253c3240c0533c6150c0530644006440062353e5253e5250c1530c05311244054451b323054453a0242e5223a0253c6153e52503345054451323605436033451b323
010c00202202524225244202432422425243252432422325223252402522420242242222524425245252422522325222242442524326224252402424522220252452524524223252442522227244262432522325
010c0000224002b4202e42030420304203042033420304203042030222294202b2202e420302202b420272202a4202a4222a42227420274202742025421274212742027420274202722027422272222742227222
010c00002a4202a4222a422274202742027422272222742527400254202a2202e4202b2202a426252202a4202742027422274222442024222244222242124421244202442024420244202422024422182210c421
011100000c3430035500345003353c6150a3300a4320a3320c3430335503345033353c6151333013432133320c3430735507345073353c6151633016432163320c3430335503345033353c6151b3301b4321b332
01110000162251b425222253751227425375122b5112e2251b4352b2402944027240224471f440244422443224422244253a512222253a523274252e2253a425162351b4352e4302e23222431222302243222232
011100000c3430535505345053353c6150f3301f4260f3320c3430335503345033353c6151332616325133320c3430735507345073353c6151633026426163320c3430335503345033353c6150f3261b3150f322
011100001d22522425272253f51227425375122b5112e225322403323133222304403043030422375112e44237442372322c2412c2322c2222c4202c4153a425162351b4352b4402b4322b220224402243222222
011100001f2401f4301f2201f21527425375122b5112e225162251b5112e2253a5122b425375122b5112e225162251b425225133021033410375223341027221162251b425222253751227425373112b3112e325
01110000182251f511242233c5122b425335122b5112e225162251b5112e2253a5122b425375122b5112e225162251b425225133021033410375223341027221162251b425222253751227425373112b3112e325
011100000f22522425272253f51227425375122b5112e2252724027232272222444024430244222b511224422b4422b23220241202322023220420204153a425162351b4351f4401f4321f2201d4401d4321d222
007800000c8410c8410c8400c8400c8400c8400c8400c8400c8400c8400c8400c8400c8400c8400c8400c84018841188401884018840188401884018840188402483124830248302483024830248302483024830
01780000269542694026930185351870007525075240752507534000002495424940249301d5241d7000c5250c5242952500000000002b525000001d5241d5250a5440a5450a5440a5201a7341a7350a0350a024
017800000072400735007440075500744007350072400715007340072500000057440575505744057350572405735057440575503744037350372403735037440375503744037350372403735037440373503704
017800000a0041f734219442194224a5424a5224a45265351a5341a5350000026934269421ba541ba501ba550c5340c5450c5540c555000001f9541f9501f955225251f5341f52522a2022a3222a452b7342b725
0110002005b4008b3009b200ab3009b4008b3006b2002b3001b4006b3006b2003b3002b4003b3005b2007b3008b4009b300ab200ab300ab4009b3008b2007b3005b4003b3002b2002b3002b4002b3004b2007b30
0118042000c260cc260cc2600c2600c2600c260cc260cc260cc2600c2600c260cc260cc260cc2600c2600c260cc2600c2600c2600c260cc260cc260cc2600c260cc2600c260cc260cc2600c260cc260cc2605c26
012000200cb200fb3010b4011b5010b400fb300db2009b3008b400db500db400ab3009b200ab300cb400eb500fb4010b3011b2011b3011b4010b500fb400eb300cb200ab3015b4015b5015b4015b300bb200eb30
012c002000000000000000000000000000000000000000001372413720137201372015724157201572015722137241872418720187201872018720187201872018725187021a7241c7211c7201c7201c7201c720
012800001c7201f7241f7201f7201f7201f720157241572015720157201572015720157201572215725000001c7241c7201c7201c7201c7201f7241f7201f7201f7201f722157241572015720157201572015720
012800001572015725000001f7241c7241c7201c7201c7201c7201c72215724137211372013720137201372013720137221872418720187201872018720187201872018720187201872218725187001870018705
012000000dd650dd550dd450dd351075510745107351072500c5517d5517d4517d3517d2517d2510755107450dd650dd550dd450dd351075510745107351072500c5417d5517d4517d3517d2517d250dd250dd35
011d0c201072519d5519d4519d3519d251005510045100351002517d550f7350f7350f7250f72510725107251072519d3519d3519d2519d250b0250b0350b7350b0250b7250b72517d3517d350f7350f7350f725
0120000012d6512d5512d4512d351575515745157351572500c5510d5510d4510d3510d2510d25157551574512d6512d5512d4512d35157551574500c54157351572519d5519d4519d3519d2519d250dd250dd35
011d0c20107251ed351ed351ed351ed251503515035150251502517d35147351472514725147251572515725157251ed351ed351ed251ed2515025150351573515025157251572519d3519d350f7350f7350f725
0120000019d5519d450dd3501d551405014040147321472223d3523d450bd350bd551505015040157321572219d5519d450dd3501d551705019040197321972223d3523d450bd350bd551c0501e0401e7321e722
012000001ed551ed4512d3506d552105021040217322172228d4528d3528d2520050200521e0401e7321e7221ed551ed4512d3506d552105021040257322572228d5528d4528d3528d251c0401e0301e7221e722
0112000024e4524e3521f251ff351ff451de3524f2524f3518e451de351fe251d73018e251de351fe451d7321ff4521f3524f252973029e252be352ee4524e3524e2524e3521f451ff351ff251de352473224f35
0112000024e2524e35219451ff352192524e3524e4524f3526f2526f351fe451d73232f4532f352be25297322bf252bf352df253573235e2537e353ae4530e3530e2530e352df452bf352bf2529e253073230f35
011200002de252de352af4528f3528f2526e352df452df3521e2526e3528e452673221e3526e2528e352673228f252af352df253273232e3534e2537e352de252de352de252af3528f2528f3526e252d7322df35
011200000a0550a0350a0250a0550a0350a0250a0550a0350a0250a0550a035050250a0550a0350a0250a0550a035050250a0550a0350a0250a0550a035050250a0550a035050250a0550a035050250a0550a035
011200000505505035050250505505035050250505505035050250505505035000250505505035050250505505035000250505505035050250505505035000250505505035000250505505035000250505505035
011200000705507035070250705507035070250705507035070250705507035020250705507035070250705502035020550205502035020250205502035090250205502035090250205502035090250205502035
__music__
00 08094344
00 080a4344
00 0b094344
00 0c0a4344
00 0b094344
02 0c0a4344
01 12134344
00 12134344
00 12134344
00 12134344
00 14154344
00 14154344
02 16174344
01 18424344
00 1b424344
00 1c424344
00 18424344
00 181a4344
00 1b1a4344
00 1c194344
02 181d4344
00 1e424344
00 1f424344
01 1e204344
00 1f204344
00 1e204344
00 1f204344
00 1e214344
00 1f224344
00 1e214344
02 1f224344
00 23424344
00 23424344
01 23244344
00 23244344
00 25294344
00 25264344
00 23274344
02 23284344
03 2a2b2c2d
01 2e2f3031
00 2e2f3032
02 2e2f3033
01 34354344
00 34354344
00 36374344
00 34384344
00 34384344
02 36394344
00 0d117f44
01 0d117f44
00 0d0e7f44
00 0d0e7f44
00 0d107f44
00 0d107f44
02 0d0f7f44
01 3d3a4344
00 3e3a4344
00 3d3b4344
00 3e3a4344
00 3f3c5344
02 3f3c5344
00 7e7f5344
00 7e7f5344

